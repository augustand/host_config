#运行用户
user centos;
#启动进程,通常设置成和cpu的数量相等
worker_processes  4;

#全局错误日志及PID文件
error_log  /var/log/nginx/nginx.global.error.log;
access_log /var/log/nginx/nginx.global.log;
pid        /var/run/nginx.pid;


#工作模式及连接数上限
events {
    use   epoll;             #epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能
    worker_connections  1024;#单个后台worker process进程的最大并发链接数
    multi_accept on;
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
     #设定mime类型,类型由mime.type文件定义
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    #设定日志格式
    access_log    /var/log/nginx/nginx.http.log;
    error_log     /var/log/nginx/nginx.http.error.log;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;

    #连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  65;
    tcp_nodelay        on;

    #开启gzip压缩
    gzip  on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

    #设定请求缓冲
    client_header_buffer_size    1k;
    large_client_header_buffers  4 4k;

    #include /etc/nginx/conf.d/*.conf;
    #include /etc/nginx/sites-enabled/*;

    #设定负载均衡的服务器列表
    #supervisor起了8个进程，这轮询这几个进程
    upstream jlog {
      server  localhost:8000;
      server  localhost:8001;
      server  localhost:8002;
      server  localhost:8003;
    }
    server {
        #侦听80端口
        listen       80;
        #定义使用localhost访问
        server_name  localhost;

        #设定本虚拟主机的访问日志
        access_log /var/log/nginx/nginx.log;
        error_log  /var/log/nginx/nginx.error.log;

        location / {
            #定义服务器的默认网站根目录位置
            # root   /root;
            #定义首页索引文件的名称
            # index index.php index.html index.htm;

            proxy_read_timeout 1800;
            proxy_pass_header  Server;
            proxy_pass         http://jlog;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   X-Scheme         $scheme;
        }

         #设定查看Nginx状态的地址
        location /NginxStatus {
            stub_status            on;
            access_log             on;
            auth_basic             "NginxStatus";
            auth_basic_user_file   conf/htpasswd;
        }

        #禁止访问 .htxxx 文件
        location ~ /\.ht {
            deny all;
        }

        ＃location ~ ^(/static/) {
        ＃    root /var/www/haproxy_tornado/;
        ＃    expires 7d;
        ＃    access_log   off;
        ＃}

        ＃location ~ ^(/media/).*\.(jpg|jpeg|png|gif)$ {
        ＃    root /var/www/haproxy_tornado//;
        ＃    expires 15d;
        ＃    access_log   off;
        ＃    try_files $uri =404 /static/empty.gif;
        ＃}

        ＃location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|mov) {
        ＃    access_log   off;
        ＃}

        # 定义错误提示页面
        #error_page   500 502 503 504 /50x.html;
        #    location = /50x.html {
        #    root   /root;
        #}

        #静态文件，nginx自己处理
        ＃location ~ ^/(images|javascript|js|css|flash|media|static)/ {
        ＃    root /var/www/virtual/htdocs;
        ＃    #过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。
        ＃    expires 30d;
        ＃}
    }
}
